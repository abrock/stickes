package de.xonibo.stickes.awt;

import de.xonibo.stickes.StichData;
import de.xonibo.stickes.assemble.LindenmayerTurtle;
import de.xonibo.stickes.stiches.BasicShape;
import de.xonibo.stickes.stiches.Plain;
import java.awt.geom.GeneralPath;
import java.util.ArrayList;
import java.util.List;

public class LSEditorJPanel extends javax.swing.JPanel {

    private final Visual visual;

    public LSEditorJPanel() {
        this.visual = null;
    }

    public LSEditorJPanel(Visual visual) {
        this.visual = visual;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelAngle = new javax.swing.JLabel();
        jLabelIterations = new javax.swing.JLabel();
        jLabelAxiom = new javax.swing.JLabel();
        jLabelRule1 = new javax.swing.JLabel();
        jLabelRule2 = new javax.swing.JLabel();
        jButtonDeleteLS = new javax.swing.JButton();
        jButtonAddRule = new javax.swing.JButton();
        jButtonRunLS = new javax.swing.JButton();
        jButtonSaveLS = new javax.swing.JButton();
        jScrollPaneList = new javax.swing.JScrollPane();
        lslist = new javax.swing.JList();
        axiom = new javax.swing.JTextField();
        rule1 = new javax.swing.JTextField();
        rule2 = new javax.swing.JTextField();
        jCheckBoxAutoRun = new javax.swing.JCheckBox();
        angle = new javax.swing.JSpinner();
        iterations = new javax.swing.JSpinner();

        jLabelAngle.setText("Angle");

        jLabelIterations.setText("Iterations");

        jLabelAxiom.setText("Axiom");

        jLabelRule1.setText("Rule1");

        jLabelRule2.setText("Rule2");

        jButtonDeleteLS.setText("Delete");
        jButtonDeleteLS.setEnabled(false);

        jButtonAddRule.setText("add Rule");
        jButtonAddRule.setEnabled(false);
        jButtonAddRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRuleActionPerformed(evt);
            }
        });

        jButtonRunLS.setText("Run");
        jButtonRunLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunLSActionPerformed(evt);
            }
        });

        jButtonSaveLS.setText("Save");
        jButtonSaveLS.setEnabled(false);

        lslist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lslist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lslist.setEnabled(false);
        jScrollPaneList.setViewportView(lslist);

        axiom.setText("FX");
        axiom.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                axiomCaretUpdate(evt);
            }
        });
        axiom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                axiomActionPerformed(evt);
            }
        });

        rule1.setText("X=X+YF+");
        rule1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rule1CaretUpdate(evt);
            }
        });
        rule1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rule1ActionPerformed(evt);
            }
        });

        rule2.setText("Y=-FX-Y");
        rule2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                rule2CaretUpdate(evt);
            }
        });
        rule2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rule2ActionPerformed(evt);
            }
        });

        jCheckBoxAutoRun.setText("autoRun");
        jCheckBoxAutoRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAutoRunActionPerformed(evt);
            }
        });

        angle.setModel(new javax.swing.SpinnerNumberModel(90, -180, 180, 1));
        angle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                angleStateChanged(evt);
            }
        });
        angle.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                angleVetoableChange(evt);
            }
        });

        iterations.setModel(new javax.swing.SpinnerNumberModel(10, 1, 42, 1));
        iterations.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iterationsStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonRunLS)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxAutoRun))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPaneList, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabelRule1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelAxiom, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                            .addComponent(jLabelRule2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rule1)
                                                    .addComponent(rule2)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(axiom, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelIterations)
                                            .addComponent(jLabelAngle))
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(iterations, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                            .addComponent(angle, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonDeleteLS)
                                    .addComponent(jButtonSaveLS)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAddRule, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPaneList, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAngle)
                            .addComponent(angle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSaveLS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteLS)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIterations)
                    .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelAxiom)
                    .addComponent(axiom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rule1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRule1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonAddRule)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rule2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRule2))
                        .addGap(46, 46, 46)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRunLS)
                    .addComponent(jCheckBoxAutoRun))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRuleActionPerformed
// xxxx
    }//GEN-LAST:event_jButtonAddRuleActionPerformed

    private void rule1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rule1ActionPerformed
//cc
        
    }//GEN-LAST:event_rule1ActionPerformed

    private void jButtonRunLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunLSActionPerformed
        calculate();
    }//GEN-LAST:event_jButtonRunLSActionPerformed

    public void calculate() {
        int it = (int) iterations.getValue();
        int a = (int) angle.getValue();
        List<String> newinstructions = new ArrayList<>();
        newinstructions.add(rule1.getText());
        newinstructions.add(rule2.getText());
        LindenmayerTurtle ls = new LindenmayerTurtle(it, a, 10, axiom.getText(), newinstructions);
        GeneralPath path = ls.getPath();
        StichData sd = new Plain(path).toStichData();
        visual.setStichData(sd);
        visual.init();
        visual.repaint();
    }

    private void jCheckBoxAutoRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAutoRunActionPerformed
        jButtonRunLS.setEnabled(!jCheckBoxAutoRun.isSelected());
    }//GEN-LAST:event_jCheckBoxAutoRunActionPerformed

    private void angleVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_angleVetoableChange
        //do something
    }//GEN-LAST:event_angleVetoableChange

    private void angleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_angleStateChanged
        if (jCheckBoxAutoRun.isSelected()) {
            calculate();
        }
    }//GEN-LAST:event_angleStateChanged

    private void iterationsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iterationsStateChanged
        if (jCheckBoxAutoRun.isSelected()) {
            calculate();
        }
    }//GEN-LAST:event_iterationsStateChanged

    private void axiomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_axiomActionPerformed
        //
    }//GEN-LAST:event_axiomActionPerformed

    private void rule2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rule2ActionPerformed
      //
    }//GEN-LAST:event_rule2ActionPerformed

    private void axiomCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_axiomCaretUpdate
        if (jCheckBoxAutoRun.isSelected()) {
            calculate();
        }
    }//GEN-LAST:event_axiomCaretUpdate

    private void rule1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rule1CaretUpdate
        if (jCheckBoxAutoRun.isSelected()) {
            calculate();
        }
    }//GEN-LAST:event_rule1CaretUpdate

    private void rule2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_rule2CaretUpdate
        if (jCheckBoxAutoRun.isSelected()) {
            calculate();
        }
    }//GEN-LAST:event_rule2CaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner angle;
    private javax.swing.JTextField axiom;
    private javax.swing.JSpinner iterations;
    private javax.swing.JButton jButtonAddRule;
    private javax.swing.JButton jButtonDeleteLS;
    private javax.swing.JButton jButtonRunLS;
    private javax.swing.JButton jButtonSaveLS;
    private javax.swing.JCheckBox jCheckBoxAutoRun;
    private javax.swing.JLabel jLabelAngle;
    private javax.swing.JLabel jLabelAxiom;
    private javax.swing.JLabel jLabelIterations;
    private javax.swing.JLabel jLabelRule1;
    private javax.swing.JLabel jLabelRule2;
    private javax.swing.JScrollPane jScrollPaneList;
    private javax.swing.JList lslist;
    private javax.swing.JTextField rule1;
    private javax.swing.JTextField rule2;
    // End of variables declaration//GEN-END:variables
}
